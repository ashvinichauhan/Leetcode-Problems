//(Facebook/Microsoft/Amazon)
import java.util.*;

class Solution {
    private List<List<Integer>> graph;
    private int[] discoveryTime, low;
    private int time;
    private List<List<Integer>> criticalConnections;
    
    public List<List<Integer>> criticalConnections(int n, List<List<Integer>> connections) {
        graph = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            graph.add(new ArrayList<>());
        }
        
        for (List<Integer> connection : connections) {
            int u = connection.get(0);
            int v = connection.get(1);
            graph.get(u).add(v);
            graph.get(v).add(u);
        }
        
        discoveryTime = new int[n];
        low = new int[n];
        Arrays.fill(discoveryTime, -1);
        Arrays.fill(low, -1);
        
        time = 0;
        criticalConnections = new ArrayList<>();
        
        dfs(0, -1);
        
        return criticalConnections;
    }
    
    private void dfs(int u, int parent) {
        discoveryTime[u] = low[u] = ++time;
        
        for (int v : graph.get(u)) {
            if (v == parent) {
                continue;
            }
            if (discoveryTime[v] == -1) {
                dfs(v, u);
                low[u] = Math.min(low[u], low[v]);
                if (low[v] > discoveryTime[u]) {
                    criticalConnections.add(Arrays.asList(u, v));
                }
            } else {
                low[u] = Math.min(low[u], discoveryTime[v]);
            }
        }
    }
}
